{
	"name": "EmployeeDepartmentAggregation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_AzureSql_DfDemoDatabase_Employee",
						"type": "DatasetReference"
					},
					"name": "Employee",
					"description": "Employee Dataset"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSql_DfDemoDatabase_Department",
						"type": "DatasetReference"
					},
					"name": "Department",
					"description": "Department Dataset"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Datalake_Json_EmployeeDepartment",
						"type": "DatasetReference"
					},
					"name": "SaveEmployeeDepartmentAggregation",
					"description": "Save Employee Department Aggregation"
				}
			],
			"transformations": [
				{
					"name": "InnerJoinEmployeeDepartment",
					"description": "Inner Join Employee Department on DepartmentId"
				},
				{
					"name": "AverageSalaryGroupByDepartment"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          Name as string,",
				"          DepartmentId as integer,",
				"          Salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Employee",
				"source(output(",
				"          Id as integer,",
				"          Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Department",
				"Employee, Department join(DepartmentId == Department@Id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoinEmployeeDepartment",
				"InnerJoinEmployeeDepartment aggregate(groupBy({Department Name} = Department@Name),",
				"     {Average Salary} = avg(Salary)) ~> AverageSalaryGroupByDepartment",
				"AverageSalaryGroupByDepartment sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     mapColumn(",
				"          {Department Name},",
				"          {Average Salary} = AverageSalaryGroupByDepatment@{Average Salary}",
				"     )) ~> SaveEmployeeDepartmentAggregation"
			]
		}
	}
}