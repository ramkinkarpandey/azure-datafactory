{
	"name": "EmployeeCompanyAggregation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_AzureSql_DfDemoDatabase_Employee",
						"type": "DatasetReference"
					},
					"name": "Employee",
					"description": "Employee Dataset"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSql_DfDemoDatabase_Department",
						"type": "DatasetReference"
					},
					"name": "Company",
					"description": "Company Dataset"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Datalake_Json_EmployeeDepartment",
						"type": "DatasetReference"
					},
					"name": "EmployeeCompanyJoinData"
				}
			],
			"transformations": [
				{
					"name": "InnerJoinEmployeeDepartment"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          Name as string,",
				"          DepartmentId as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Employee",
				"source(output(",
				"          Id as integer,",
				"          Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Company",
				"Employee, Company join(DepartmentId == Company@Id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoinEmployeeDepartment",
				"InnerJoinEmployeeDepartment sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> EmployeeCompanyJoinData"
			]
		}
	}
}