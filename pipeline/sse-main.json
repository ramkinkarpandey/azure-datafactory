{
	"name": "sse-main",
	"properties": {
		"activities": [
			{
				"name": "ForEach Location",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.Locations",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Execute sse-main-foreach-location",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "sse-main-foreach-location",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"Location": {
										"value": "@item()",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Merge all Newly Created Files",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach Location",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set transformedFileName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"additionalColumns": [
							{
								"name": "ObjectName",
								"value": ""
							},
							{
								"name": "Latitude",
								"value": "$$FILEPATH"
							},
							{
								"name": "Longitude",
								"value": "$$FILEPATH"
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "setOfObjects"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['result']..['points']"
								},
								"sink": {
									"path": "$['result']['points']"
								}
							},
							{
								"source": {
									"path": "$['replyInfo']"
								},
								"sink": {
									"path": "$['replyInfo']"
								}
							},
							{
								"sink": {
									"path": "$['ObjectName']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "ds_dataLakeV2_sseTurbines",
						"type": "DatasetReference",
						"parameters": {
							"folderName": "rawFiles",
							"fileName": "\\"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_dataLakeV2_sseTurbines",
						"type": "DatasetReference",
						"parameters": {
							"folderName": "mergedFiles",
							"fileName": "mergedFile.json"
						}
					}
				]
			},
			{
				"name": "Transform Files",
				"type": "ExecuteDataFlow",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Merge all Newly Created Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_transform_sseApi_response",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Set transformedFileName",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "transformedFileName",
					"value": {
						"value": "@concat(guid(),'.json')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"Locations": {
				"type": "array",
				"defaultValue": [
					"GRIF",
					"ARTF",
					"DROM"
				]
			}
		},
		"variables": {
			"turbine": {
				"type": "String"
			},
			"points": {
				"type": "String"
			},
			"turbineCollection": {
				"type": "Array"
			},
			"pointsCollection": {
				"type": "Array"
			},
			"transformedFileName": {
				"type": "String"
			}
		},
		"annotations": []
	}
}