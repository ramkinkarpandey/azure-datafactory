{
	"name": "sse-main-foreach-location",
	"properties": {
		"activities": [
			{
				"name": "Lookup List Of Turbines",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureTableSource",
						"azureTableSourceQuery": {
							"value": "@concat('PartitionKey eq ', '''',pipeline().parameters.Location,'''')",
							"type": "Expression"
						},
						"azureTableSourceIgnoreTableNotFound": false
					},
					"dataset": {
						"referenceName": "ds_azureTable_sseStorage",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Turbine At One Location",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup List Of Turbines",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set points",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup List Of Turbines').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set tempTurbine",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "tempTurbine",
								"value": {
									"value": "@variables('turbine')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set turbine",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set tempTurbine",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "turbine",
								"value": {
									"value": "@concat(variables('tempTurbine'), '&ObjectIds=',item().RowKey)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set points",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "points",
					"value": {
						"value": "@concat('&Points=ActivePower','&Points=RotorSpeed', '&Points=WindSpeed')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy data from API Call to Storage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach Turbine At One Location",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_Rest_sseBazeFieldApi",
						"type": "DatasetReference",
						"parameters": {
							"objectIds": {
								"value": "@variables('turbine')",
								"type": "Expression"
							},
							"points": {
								"value": "@variables('points')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_dataLakeV2_sseTurbines",
						"type": "DatasetReference",
						"parameters": {
							"folderName": "rawFiles"
						}
					}
				]
			},
			{
				"name": "Merge all Newly Created Files",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy data from API Call to Storage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_dataLakeV2_sseTurbines",
						"type": "DatasetReference",
						"parameters": {
							"folderName": "rawFiles"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_dataLakeV2_sseTurbines",
						"type": "DatasetReference",
						"parameters": {
							"folderName": "mergedFiles"
						}
					}
				]
			},
			{
				"name": "Transform Files",
				"type": "ExecuteDataFlow",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_transform_sseApi_response",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"Location": {
				"type": "string"
			}
		},
		"variables": {
			"turbine": {
				"type": "String"
			},
			"points": {
				"type": "String"
			},
			"tempTurbine": {
				"type": "String"
			}
		},
		"annotations": []
	}
}